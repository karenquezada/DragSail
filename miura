import gurobipy as gp
from gurobipy import GRB
import numpy as np


def f1(a,angulo1,angulo2):
    # Define your first objective function f1(x) here
    return a*np.sin(np.radians(angulo1))*np.sin(np.radians(angulo2))

def f2(b,angulo1,angulo2):
    # Define your second objective function f2(y) here
    return  2*b*(np.cos(np.radians(angulo1))*np.tan(np.radians(angulo2)))/np.sqrt(1+np.cos(np.radians(angulo1))
                                                                         **2*np.tan(np.radians(angulo2))**2)

# Create a new Gurobi model
model = gp.Model()

# Define the decision variables
a = model.addVar(lb=-GRB.INFINITY, ub=GRB.INFINITY, name="x") 
b = model.addVar(lb=-GRB.INFINITY, ub=GRB.INFINITY, name="y")

# Set the objective function
theta=0
alpha=60
obj = f1(a,theta,alpha) + f2(b,theta,alpha)
model.setObjective(obj, GRB.MINIMIZE)

# Add any additional constraints if needed
# ...

# Optimize the model
model.
model.optimize()

# Print the optimal solution
if model.status == GRB.OPTIMAL:
    print("Optimal solution found:")
    print("x =", a.x)
    print("y =", b.x)
else:
    print("No solution found.")
