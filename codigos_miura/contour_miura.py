import numpy as np
import matplotlib.pyplot as plt


cxpbs = np.linspace(0.1, 0.9, 9)  
mutpbs = np.linspace(0.1, 0.9, 9)

best_fitness = np.array([
    [-166.19726624, -150.108593,   -206.61637759, -210.51102025, -166.80756574,
     -172.3888923,  -151.61306948, -162.95193661, -150.11212961],
    
    [-150.10915517, -150.16163642, -152.43703805, -152.07986913, -152.5206168,
     -205.90121279, -150.18450501, -150.10928617, -150.11295641],
    
    [-150.10855428, -150.1257531,  -150.11081462, -150.11092917, -150.12115788,
     -150.93749977, -150.11035124, -157.27748262, -150.11322836],
    
    [-150.1165027,  -150.10868903, -150.10843222, -150.10910864, -150.10877877,
     -150.11337377, -150.10858545, -150.93749977, -150.10973968],
    
    [-150.12434299, -150.11325877, -150.1084522,  -150.10907585, -150.10835969,
     -150.10868345, -150.1123256,  -150.11029364, -150.93749977],
    
    [-150.11131707, -150.11025238, -150.10902833, -150.10838195, -150.11040612,
     -150.11235778, -150.11036568, -150.10835984, -150.10829885],
    
    [-150.10830255, -150.1090057,  -150.10829333, -150.10858269, -150.11836895,
     -150.10831117, -150.10837689, -150.10930184, -150.10933305],
    
    [-150.10837073, -150.10965612, -150.10829521, -150.10836134, -150.10898738,
     -150.10831903, -150.10923852, -150.10834422, -150.10834382],
    
    [-150.10829119, -150.10855254, -150.10835915, -150.10830105, -150.11186811,
     -150.10844706, -150.10988304, -150.10937505, -150.10916968]
])

average_fitness = np.array([
    [-166.19726624, -150.108593,   -206.61765419, -210.6721835,  -166.80756574,
     -172.3888923,  -151.65621818, -163.0104869,  -150.17090678],
    
    [-150.11166683, -150.16285728, -152.43703805, -152.11411863, -152.5206168,
     -205.90121279, -150.30008512, -150.17759398, -150.17771632],
    
    [-150.12374443, -150.12813065, -150.1177281,  -150.3910893,  -150.16050409,
     -150.94900529, -150.17762948, -157.27748262, -150.16660521],
    
    [-150.11861759, -150.13380917, -150.15565295, -150.17160914, -150.15914929,
     -150.18868966, -150.14590273, -150.9467764,  -150.17776095],
    
    [-150.23121758, -150.32788781, -150.13764121, -150.12340242, -152.96261754,
     -153.04879601, -150.17318704, -150.2415267,  -150.93749977],
    
    [-150.11357361, -151.13819869, -151.59091609, -150.32030236, -150.93904165,
     -150.16772916, -150.17461881, -150.21801275, -150.20231387],
    
    [-151.21690639, -150.1771134,  -150.53328625, -150.15170643, -150.32904766,
     -152.40830922, -150.38293675, -151.28422137, -152.73966116],
    
    [-150.86239081, -151.47197815, -150.16969373, -151.07019964, -158.25343483,
     -150.21968748, -151.03698682, -153.71864193, -150.95416368],
    
    [-151.84426963, -150.28057613, -152.82975116, -150.96380068, -152.3727146,
     -150.19339539, -152.9654626,  -152.85685676, -152.02491172]
])

plt.figure(figsize=(8, 6))
# Crear la malla de valores X, Y
X, Y = np.meshgrid(cxpbs, mutpbs)

contour_avg = plt.contourf(X, Y, average_fitness, cmap='gist_rainbow_r', levels=100)
plt.colorbar(contour_avg, label='Fitness Promedio')
plt.title('Fitness Promedio origami Miura')
plt.xlabel('Parámetro de cruza (cxpb)')
plt.ylabel('Parámetro de mutación (mutpb)')
plt.show()

#gist_rainbow_r
# Crear el gráfico de contorno
plt.figure(figsize=(8, 6))
contour = plt.contourf(X, Y, best_fitness, cmap='gist_rainbow_r', levels=100)
plt.colorbar(contour, label='Mejor Fitness')
plt.title('Mejores Fitness origami Miura')
plt.xlabel('Parámetro de cruza (cxpb)')
plt.ylabel('Parámetro de mutación (mutpb)')
plt.show()