import numpy as np
import matplotlib.pyplot as plt


cxpbs = np.linspace(0.1, 0.9, 9)  
mutpbs = np.linspace(0.1, 0.9, 9)

best_fitness = np.array([
    [-150.10828707, -150.10829591, -150.1082879 , -150.10835453, -150.10829751,
     -150.10843556, -150.10887459, -150.10828869, -150.10835839],
    [-150.10830051, -150.10830775, -150.1082862 , -150.10837341, -150.10834382,
     -150.10828974, -150.10830902, -150.10837927, -150.10828654],
    [-150.10832425, -150.10838926, -150.10828673, -150.10829022, -150.10869201,
     -150.10828605, -150.1082862 , -150.10831535, -150.1082902 ],
    [-150.10829234, -150.10834234, -150.10833346, -150.10828681, -150.10859587,
     -150.10828675, -150.10829081, -150.10831025, -150.10829489],
    [-150.10828615, -150.10828635, -150.10828908, -150.10829014, -150.10828704,
     -150.10828674, -150.10828823, -150.10829895, -150.10828716],
    [-150.10828609, -150.10828959, -150.10828992, -150.10829901, -150.10828797,
     -150.10830292, -150.1082863 , -150.10828893, -150.10828605],
    [-150.10829185, -150.10829095, -150.10830949, -150.1082862 , -150.10828605,
     -150.10828626, -150.10829065, -150.10828748, -150.10829222],
    [-150.10828784, -150.10828718, -150.1082863 , -150.10833783, -150.1082863 ,
     -150.10829169, -150.10828635, -150.10828615, -150.10828662],
    [-150.10828604, -150.10832063, -150.10828608, -150.10828617, -150.10828632,
     -150.10829176, -150.10828628, -150.10828787, -150.10829849]
])

average_fitness = np.array([
    [-1.50110270e+02, -1.50145634e+02, -1.50126459e+02, -1.50161748e+02,
     -1.50182260e+02, -1.50178592e+02, -1.50178960e+02, -1.50178516e+02,
     -1.50188819e+02],
    [-1.50111996e+02, -1.50249229e+02, -1.50164291e+02, -1.50209642e+02,
     -1.50235182e+02, -1.50211254e+02, -1.50178894e+02, -1.50283480e+02,
     -1.50194613e+02],
    [-1.50161063e+02, -1.50250990e+02, -1.50285922e+02, -1.50263722e+02,
     -1.50514270e+02, -1.50187156e+02, -1.50272879e+02, -1.50317717e+02,
     -1.50326654e+02],
    [-1.58773362e+02, -1.51107005e+02, -1.50430828e+02, -1.50315397e+02,
     -1.50359288e+02, -1.50422092e+02, -1.53712705e+02, -1.50364523e+02,
     -1.50229564e+02],
    [-1.50364275e+02, -1.50526708e+02, -1.50548435e+02, -1.52590313e+02,
     -1.51077359e+02, -1.50729805e+02, -1.50552451e+02, -1.52068327e+02,
     -1.50986386e+02],
    [-1.50907101e+02, -1.50941218e+02, -1.52460980e+02, -1.51045407e+02,
     -1.50714805e+02, -1.51510930e+02, -1.50836181e+02, -1.51961075e+02,
     -1.52158787e+02],
    [-1.51748644e+02, -1.62908702e+02, -1.50638641e+02, -1.50954043e+02,
     -1.51123377e+02, -1.50713589e+02, -1.57056129e+02, -1.50463896e+02,
     -1.52397365e+02],
    [-1.52450579e+02, -1.51433535e+02, -1.52025069e+02, -1.76321298e+02,
     -1.51671556e+02, -1.80827278e+02, -1.61628479e+02, -1.50855116e+02,
     -1.51429669e+02],
    [-1.52034881e+02, -1.56759067e+02, -1.64878597e+02, -1.60540688e+02,
     -1.59271140e+02, -5.31299095e+06, -1.57353662e+02, -1.53014098e+02,
     -1.53889393e+02]
])

plt.figure(figsize=(8, 6))
# Crear la malla de valores X, Y
X, Y = np.meshgrid(cxpbs, mutpbs)

contour_avg = plt.contourf(X, Y, average_fitness, cmap='gist_rainbow_r', levels=100)
plt.colorbar(contour_avg, label='Fitness Promedio')
plt.title('Fitness Promedio origami Miura')
plt.xlabel('Parámetro de cruza (cxpb)')
plt.ylabel('Parámetro de mutación (mutpb)')
plt.show()

#gist_rainbow_r
# Crear el gráfico de contorno
plt.figure(figsize=(8, 6))
contour = plt.contourf(X, Y, best_fitness, cmap='gist_rainbow_r', levels=100)
plt.colorbar(contour, label='Mejor Fitness')
plt.title('Mejores Fitness origami Miura')
plt.xlabel('Parámetro de cruza (cxpb)')
plt.ylabel('Parámetro de mutación (mutpb)')
plt.show()